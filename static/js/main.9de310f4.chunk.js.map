{"version":3,"sources":["features/usersReducer.js","App.js","index.js"],"names":["UserSlice","createSlice","name","initialState","value","reducers","addUser","state","action","push","payload","updateUser","deleteUser","filter","user","id","actions","App","useState","setName","userName","setUserName","dispatch","useDispatch","users","useSelector","className","onSubmit","event","preventDefault","type","placeholder","onChange","e","target","onClick","length","username","map","size","style","cursor","rootElement","document","getElementById","root","createRoot","Store","configureStore","reducer","usersReducer","render","store"],"mappings":"2LAEaA,EAAYC,YAAY,CACnCC,KAAM,QACNC,aAAc,CACZC,MAAO,IAETC,SAAU,CACRC,QAAS,SAACC,EAAOC,GACfD,EAAMH,MAAMK,KAAKD,EAAOE,UAE1BC,WAAY,SAACJ,EAAOC,KACpBI,WAAY,SAACL,EAAOC,GAClBD,EAAMH,MAAQG,EAAMH,MAAMS,QAAO,SAACC,GAAD,OAAUA,EAAKC,KAAOP,EAAOE,QAAQK,UAKrE,EAA4Cf,EAAUgB,QAA9CV,EAAR,EAAQA,QAAqBM,GAA7B,EAAiBD,WAAjB,EAA6BC,YACrBZ,IAAf,Q,uBCbe,SAASiB,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOhB,EAAP,KAAaiB,EAAb,KACA,EAAgCD,mBAAS,IAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KAEMC,EAAWC,cACXC,EAAQC,aAAY,SAAClB,GAAD,OAAWA,EAAMH,SAO3C,OACE,sBAAKsB,UAAU,MAAf,UACE,oEACA,uBAAMC,SARV,SAAsBC,GACpBA,EAAMC,iBACNV,EAAQ,IACRE,EAAY,KAKV,UACE,uBACES,KAAK,OACLC,YAAY,UACZC,SAAU,SAACC,GAAD,OAAOd,EAAQc,EAAEC,OAAO9B,QAClCA,MAAOF,IAET,uBACE4B,KAAK,OACLC,YAAY,cACZC,SAAU,SAACC,GAAD,OAAOZ,EAAYY,EAAEC,OAAO9B,QACtCA,MAAOgB,IAET,wBACEU,KAAK,SACLK,QAAS,kBACPb,EACEhB,EAAQ,CACNS,GAAIS,EAAMY,OACVC,SAAUjB,EACVlB,KAAMA,MAPd,sBAcA,2DAA4BsB,EAAMY,OAAlC,6BACA,yBAASV,UAAU,iBAAnB,SACoB,IAAjBF,EAAMY,OACH,gBACAZ,EAAMc,KAAI,SAACxB,GACT,OACE,gCACE,uCAAUA,EAAKZ,QACf,2CAAcY,EAAKuB,YACnB,sBAAKX,UAAU,cAAf,UACE,uBAAOI,KAAK,OAAOC,YAAY,uBAC/B,wBAAQD,KAAK,SAAb,oBACA,cAAC,IAAD,CACES,KAAM,GACNC,MAAO,CAAEC,OAAQ,WACjBN,QAAS,kBAAMb,EAASV,EAAWE,EAAKC,aATpCD,EAAKC,eC9CjC,IAAM2B,EAAcC,SAASC,eAAe,QACtCC,EAAOC,qBAAWJ,GAElBK,EAAQC,YAAe,CAC3BC,QAASC,IAGXL,EAAKM,OACH,cAAC,aAAD,UACE,cAAC,IAAD,CAAUC,MAAOL,EAAjB,SACE,cAAC9B,EAAD,W","file":"static/js/main.9de310f4.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const UserSlice = createSlice({\r\n  name: \"users\",\r\n  initialState: {\r\n    value: []\r\n  },\r\n  reducers: {\r\n    addUser: (state, action) => {\r\n      state.value.push(action.payload);\r\n    },\r\n    updateUser: (state, action) => {},\r\n    deleteUser: (state, action) => {\r\n      state.value = state.value.filter((user) => user.id !== action.payload.id);\r\n    }\r\n  }\r\n});\r\n\r\nexport const { addUser, updateUser, deleteUser } = UserSlice.actions;\r\nexport default UserSlice.reducer;\r\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addUser, deleteUser } from \"./features/usersReducer\";\nimport \"./styles.css\";\nimport { MdDeleteSweep } from \"react-icons/md\";\n\nexport default function App() {\n  const [name, setName] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const users = useSelector((state) => state.value);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setName(\"\");\n    setUserName(\"\");\n  }\n  return (\n    <div className=\"App\">\n      <h1>Creating a crud with react toolkit</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Name...\"\n          onChange={(e) => setName(e.target.value)}\n          value={name}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Username...\"\n          onChange={(e) => setUserName(e.target.value)}\n          value={userName}\n        />\n        <button\n          type=\"submit\"\n          onClick={() =>\n            dispatch(\n              addUser({\n                id: users.length,\n                username: userName,\n                name: name\n              })\n            )\n          }\n        >\n          Add User\n        </button>\n        <h5>{`There are currently ${users.length} users on this platform`}</h5>\n        <section className=\"display-screen\">\n          {users.length === 0\n            ? \"No User found\"\n            : users.map((user) => {\n                return (\n                  <div key={user.id}>\n                    <p>Name: {user.name}</p>\n                    <p>Username: {user.username}</p>\n                    <div className=\"actions-btn\">\n                      <input type=\"text\" placeholder=\"change username...\" />\n                      <button type=\"submit\">Change</button>\n                      <MdDeleteSweep\n                        size={22}\n                        style={{ cursor: \"pointer\" }}\n                        onClick={() => dispatch(deleteUser(user.id))}\n                      />\n                    </div>\n                  </div>\n                );\n              })}\n        </section>\n      </form>\n    </div>\n  );\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport usersReducer from \"./features/usersReducer\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nconst Store = configureStore({\n  reducer: usersReducer\n});\n\nroot.render(\n  <StrictMode>\n    <Provider store={Store}>\n      <App />\n    </Provider>\n  </StrictMode>\n);\n"],"sourceRoot":""}